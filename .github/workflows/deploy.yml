name: Deploy Infra and Configure Server

on:
  push:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
      TF_VAR_key_name: "ansible-key"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
        working-directory: terraform

      - name: Get EC2 public IP (cleaned)
        id: get_ip
        run: |
          IP=$(terraform -chdir=terraform output -raw instance_ip)
          CLEAN_IP=$(echo "$IP" | tr -d '\r\n' | xargs)
          echo "INSTANCE_IP=$CLEAN_IP" >> $GITHUB_ENV
          echo "IP=$CLEAN_IP" >> $GITHUB_OUTPUT
          echo "Cleaned IP: $CLEAN_IP"

      - name: Debug current directory and files
        run: |
          echo "Current directory:"
          pwd
          echo "Listing files:"
          ls -la

      - name: Check if ssh file exists and remove if needed
        run: |
          if [ -f "$GITHUB_WORKSPACE/ssh" ]; then
            echo "File named 'ssh' exists. Removing it."
            rm -f "$GITHUB_WORKSPACE/ssh"
          fi

      - name: Setup SSH key and known_hosts
        run: |
          mkdir -p $GITHUB_WORKSPACE/ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > $GITHUB_WORKSPACE/ssh/id_rsa
          chmod 600 $GITHUB_WORKSPACE/ssh/id_rsa
          ssh-keyscan -H ${{ env.INSTANCE_IP }} > $GITHUB_WORKSPACE/ssh/known_hosts

      - name: Create Ansible inventory
        run: |
          mkdir -p ansible/inventory
          cat <<EOF > ansible/inventory/hosts.ini
          [web]
          ${{ env.INSTANCE_IP }} ansible_user=ubuntu ansible_ssh_private_key_file=$GITHUB_WORKSPACE/ssh/id_rsa ansible_python_interpreter=/usr/bin/python3
          EOF
          echo "Inventory content:"
          cat ansible/inventory/hosts.ini

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Run Prometheus playbook
        run: ansible-playbook ansible/playbooks/prometheus_node_exporter.yml -i ansible/inventory/hosts.ini

      - name: Run Grafana playbook
        run: ansible-playbook ansible/playbooks/grafana_prometheus.yml -i ansible/inventory/hosts.ini
