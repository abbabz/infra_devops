- name: Deploy Monitoring Stack (Prometheus + Grafana + Node Exporter)
  hosts: web
  become: yes
  vars:
    grafana_admin_user: admin
    grafana_admin_password: admin
    public_ip: "{{ hostvars[inventory_hostname]['ansible_host'] | default(inventory_hostname) }}"
  tasks:

    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: true

    - name: Create Prometheus config folder
      file:
        path: /opt/prometheus
        state: directory

    - name: Create Prometheus config
      copy:
        dest: /opt/prometheus/prometheus.yml
        content: |
          global:
            scrape_interval: 15s
          scrape_configs:
            - job_name: 'prometheus'
              static_configs:
                - targets: ['localhost:9090']
            - job_name: 'node_exporter'
              static_configs:
                - targets: ['{{ public_ip }}:9100']

    - name: Run Prometheus container
      docker_container:
        name: prometheus
        image: prom/prometheus
        state: started
        restart_policy: always
        ports:
          - "9090:9090"
        volumes:
          - /opt/prometheus:/etc/prometheus
        recreate: true

    - name: Run Grafana container
      docker_container:
        name: grafana
        image: grafana/grafana
        state: started
        restart_policy: always
        ports:
          - "3000:3000"
        env:
          GF_SECURITY_ADMIN_USER: "{{ grafana_admin_user }}"
          GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_admin_password }}"

    - name: Wait for Grafana to be ready
      uri:
        url: "http://localhost:3000/api/health"
        status_code: 200
      register: grafana_ready
      until: grafana_ready.status == 200
      retries: 10
      delay: 5

    - name: Add Prometheus datasource to Grafana
      uri:
        url: "http://localhost:3000/api/datasources"
        method: POST
        user: "{{ grafana_admin_user }}"
        password: "{{ grafana_admin_password }}"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          name: "Prometheus"
          type: "prometheus"
          access: "proxy"
          url: "http://{{ public_ip }}:9090"
          isDefault: true
        status_code: 200,409

    - name: Import Node Exporter Full Dashboard (UID 1860)
      uri:
        url: "http://localhost:3000/api/dashboards/import"
        method: POST
        user: "{{ grafana_admin_user }}"
        password: "{{ grafana_admin_password }}"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          dashboard:
            id: 1860
            uid: "node-exporter-full"
            title: "Node Exporter Full"
          overwrite: true
          inputs:
            - name: "DS_PROMETHEUS"
              type: "datasource"
              pluginId: "prometheus"
              value: "Prometheus"
        status_code: 200
      ignore_errors: yes

    - name: Install Node Exporter
      shell: |
        useradd --no-create-home --shell /bin/false node_exporter || true
        curl -LO https://github.com/prometheus/node_exporter/releases/download/v1.7.0/node_exporter-1.7.0.linux-amd64.tar.gz
        tar -xvf node_exporter-1.7.0.linux-amd64.tar.gz
        cp node_exporter-1.7.0.linux-amd64/node_exporter /usr/local/bin/
        chown node_exporter:node_exporter /usr/local/bin/node_exporter
        tee /etc/systemd/system/node_exporter.service <<EOF
        [Unit]
        Description=Node Exporter
        After=network.target

        [Service]
        User=node_exporter
        ExecStart=/usr/local/bin/node_exporter

        [Install]
        WantedBy=default.target
        EOF

    - name: Start Node Exporter
      systemd:
        name: node_exporter
        enabled: yes
        state: started

    - name: Install NGINX
      apt:
        name: nginx
        state: present
        update_cache: yes

    - name: Ensure /var/www/html exists
      file:
        path: /var/www/html
        state: directory
        mode: '0755'

    - name: Create landing page
      copy:
        dest: /var/www/html/index.html
        content: |
          <!DOCTYPE html>
          <html lang="fr">
          <head>
            <meta charset="UTF-8">
            <title>Monitoring Dashboard</title>
          </head>
          <body style="
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #0f2027, #203a43, #2c5364);
            padding: 40px;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            color: white;
            text-align: center;
            background-size: 400% 400%;
            animation: gradientBG 15s ease infinite;
          ">
            <div style="
              max-width: 800px;
              padding: 40px;
              background: rgba(255, 255, 255, 0.08);
              backdrop-filter: blur(12px);
              border-radius: 20px;
              box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3), 
                          inset 0 0 16px rgba(255, 255, 255, 0.1);
              border: 1px solid rgba(255, 255, 255, 0.1);
            ">
              <h1 style="
                color: #ffffff;
                font-size: 2.8rem;
                margin-bottom: 10px;
                text-shadow: 0 2px 8px rgba(0,0,0,0.3);
                letter-spacing: 1px;
                position: relative;
                padding-bottom: 20px;
              ">
                Bienvenue sur le Monitoring Stack
                <div style="
                  position: absolute;
                  bottom: 0;
                  left: 50%;
                  transform: translateX(-50%);
                  width: 100px;
                  height: 4px;
                  background: linear-gradient(to right, #3498db, #2ecc71);
                  border-radius: 2px;
                "></div>
              </h1>

              <p style="
                font-size: 1.2rem;
                line-height: 1.7;
                margin: 30px 0;
                color: #ecf0f1;
                text-shadow: 0 1px 2px rgba(0,0,0,0.2);
              ">
                Ce tableau de bord a été conçu et déployé par <strong style="
                  color: #2ecc71;
                  font-weight: 600;
                  text-shadow: 0 0 10px rgba(46, 204, 113, 0.4);
                ">Amadou Issaka ILLO</strong>, Administrateur Réseaux, Systèmes & DevOps passionné, maîtrisant l'automatisation et la supervision d'infrastructure moderne.
              </p>

              <ul style="
                display: flex;
                justify-content: center;
                flex-wrap: wrap;
                gap: 20px;
                padding: 0;
                margin-top: 40px;
              ">
                <li style="list-style-type: none;">
                  <a href="http://{{ public_ip }}:9090" target="_blank" style="
                    display: inline-block;
                    padding: 16px 32px;
                    background: linear-gradient(45deg, #3498db, #2980b9);
                    color: white;
                    text-decoration: none;
                    font-weight: 600;
                    border-radius: 10px;
                    box-shadow: 0 6px 15px rgba(41, 128, 185, 0.4);
                    transition: all 0.3s ease;
                    transform: translateY(0);
                    border: 2px solid rgba(255,255,255,0.1);
                  ">
                    Prometheus
                  </a>
                </li>
                <li style="list-style-type: none;">
                  <a href="http://{{ public_ip }}:3000" target="_blank" style="
                    display: inline-block;
                    padding: 16px 32px;
                    background: linear-gradient(45deg, #9b59b6, #8e44ad);
                    color: white;
                    text-decoration: none;
                    font-weight: 600;
                    border-radius: 10px;
                    box-shadow: 0 6px 15px rgba(142, 68, 173, 0.4);
                    transition: all 0.3s ease;
                    transform: translateY(0);
                    border: 2px solid rgba(255,255,255,0.1);
                  ">
                    Grafana
                  </a>
                </li>
                <li style="list-style-type: none;">
                  <a href="http://{{ public_ip }}:9100/metrics" target="_blank" style="
                    display: inline-block;
                    padding: 16px 32px;
                    background: linear-gradient(45deg, #2ecc71, #27ae60);
                    color: white;
                    text-decoration: none;
                    font-weight: 600;
                    border-radius: 10px;
                    box-shadow: 0 6px 15px rgba(39, 174, 96, 0.4);
                    transition: all 0.3s ease;
                    transform: translateY(0);
                    border: 2px solid rgba(255,255,255,0.1);
                  ">
                    Node Exporter
                  </a>
