- name: Deploy Monitoring Stack (Prometheus + Grafana + Node Exporter)
  hosts: web
  become: yes
  vars:
    grafana_admin_user: admin
    grafana_admin_password: admin
    public_ip: "{{ hostvars[inventory_hostname]['ansible_host'] | default(inventory_hostname) }}"
  tasks:

    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: true

    - name: Create Prometheus config folder
      file:
        path: /opt/prometheus
        state: directory

    - name: Create Prometheus config
      copy:
        dest: /opt/prometheus/prometheus.yml
        content: |
          global:
            scrape_interval: 15s
          scrape_configs:
            - job_name: 'prometheus'
              static_configs:
                - targets: ['localhost:9090']
            - job_name: 'node_exporter'
              static_configs:
                - targets: ['{{ public_ip }}:9100']

    - name: Run Prometheus container
      docker_container:
        name: prometheus
        image: prom/prometheus
        state: started
        restart_policy: always
        ports:
          - "9090:9090"
        volumes:
          - /opt/prometheus:/etc/prometheus
        recreate: true

    - name: Run Grafana container
      docker_container:
        name: grafana
        image: grafana/grafana
        state: started
        restart_policy: always
        ports:
          - "3000:3000"
        env:
          GF_SECURITY_ADMIN_USER: "{{ grafana_admin_user }}"
          GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_admin_password }}"

    - name: Wait for Grafana to be ready
      uri:
        url: "http://localhost:3000/api/health"
        status_code: 200
      register: grafana_ready
      until: grafana_ready.status == 200
      retries: 10
      delay: 5

    - name: Add Prometheus datasource to Grafana
      uri:
        url: "http://localhost:3000/api/datasources"
        method: POST
        user: "{{ grafana_admin_user }}"
        password: "{{ grafana_admin_password }}"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          name: "Prometheus"
          type: "prometheus"
          access: "proxy"
          url: "http://{{ public_ip }}:9090"
          isDefault: true
        status_code: 200,409

    - name: Import Node Exporter Full Dashboard (UID 1860)
      uri:
        url: "http://localhost:3000/api/dashboards/import"
        method: POST
        user: "{{ grafana_admin_user }}"
        password: "{{ grafana_admin_password }}"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          dashboard:
            id: 1860
            uid: "node-exporter-full"
            title: "Node Exporter Full"
          overwrite: true
          inputs:
            - name: "DS_PROMETHEUS"
              type: "datasource"
              pluginId: "prometheus"
              value: "Prometheus"
        status_code: 200
      ignore_errors: yes

    - name: Install Node Exporter
      shell: |
        useradd --no-create-home --shell /bin/false node_exporter || true
        curl -LO https://github.com/prometheus/node_exporter/releases/download/v1.7.0/node_exporter-1.7.0.linux-amd64.tar.gz
        tar -xvf node_exporter-1.7.0.linux-amd64.tar.gz
        cp node_exporter-1.7.0.linux-amd64/node_exporter /usr/local/bin/
        chown node_exporter:node_exporter /usr/local/bin/node_exporter
        tee /etc/systemd/system/node_exporter.service <<EOF
        [Unit]
        Description=Node Exporter
        After=network.target

        [Service]
        User=node_exporter
        ExecStart=/usr/local/bin/node_exporter

        [Install]
        WantedBy=default.target
        EOF

    - name: Start Node Exporter
      systemd:
        name: node_exporter
        enabled: yes
        state: started
